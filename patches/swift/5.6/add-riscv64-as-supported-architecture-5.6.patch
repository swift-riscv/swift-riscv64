diff --git a/utils/build-script-impl b/utils/build-script-impl
index 074e6f6cad2..728eb774e59 100755
--- a/utils/build-script-impl
+++ b/utils/build-script-impl
@@ -457,6 +457,7 @@ function verify_host_is_supported() {
       | linux-aarch64           \
       | linux-powerpc64         \
       | linux-powerpc64le       \
+      | linux-riscv64           \
       | linux-s390x             \
       | macosx-x86_64           \
       | macosx-arm64            \
diff --git a/utils/build_swift/build_swift/driver_arguments.py b/utils/build_swift/build_swift/driver_arguments.py
index c18340e149c..cef9c86bd1a 100644
--- a/utils/build_swift/build_swift/driver_arguments.py
+++ b/utils/build_swift/build_swift/driver_arguments.py
@@ -1132,7 +1132,7 @@ def create_argument_parser():
     in_group('Build settings specific for LLVM')
 
     option('--llvm-targets-to-build', store,
-           default='X86;ARM;AArch64;PowerPC;SystemZ;Mips',
+           default='X86;ARM;AArch64;PowerPC;SystemZ;Mips;RISCV',
            help='LLVM target generators to build')
 
     option('--llvm-ninja-targets', append,
diff --git a/utils/build_swift/tests/expected_options.py b/utils/build_swift/tests/expected_options.py
index 40cb6ac88da..2fd6fe7d98b 100644
--- a/utils/build_swift/tests/expected_options.py
+++ b/utils/build_swift/tests/expected_options.py
@@ -189,7 +189,7 @@ EXPECTED_DEFAULTS = {
     'llvm_ninja_targets_for_cross_compile_hosts': [],
     'llvm_max_parallel_lto_link_jobs':
         defaults.LLVM_MAX_PARALLEL_LTO_LINK_JOBS,
-    'llvm_targets_to_build': 'X86;ARM;AArch64;PowerPC;SystemZ;Mips',
+    'llvm_targets_to_build': 'X86;ARM;AArch64;PowerPC;SystemZ;Mips;RISCV',
     'tsan_libdispatch_test': False,
     'long_test': False,
     'lto_type': None,
diff --git a/utils/swift_build_support/swift_build_support/targets.py b/utils/swift_build_support/swift_build_support/targets.py
index 05966defe28..ba7a96c55a4 100644
--- a/utils/swift_build_support/swift_build_support/targets.py
+++ b/utils/swift_build_support/swift_build_support/targets.py
@@ -229,6 +229,7 @@ class StdlibDeploymentTarget(object):
         "aarch64",
         "powerpc64",
         "powerpc64le",
+        "riscv64",
         "s390x"])
 
     FreeBSD = Platform("freebsd", archs=["x86_64"])
@@ -310,6 +311,8 @@ class StdlibDeploymentTarget(object):
                 return StdlibDeploymentTarget.Linux.powerpc64
             elif machine == 'ppc64le':
                 return StdlibDeploymentTarget.Linux.powerpc64le
+            elif machine == 'riscv64':
+                return StdlibDeploymentTarget.Linux.riscv64
             elif machine == 's390x':
                 return StdlibDeploymentTarget.Linux.s390x
 
