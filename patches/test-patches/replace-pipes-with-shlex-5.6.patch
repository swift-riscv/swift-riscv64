diff --git a/test/SourceKit/lit.local.cfg b/test/SourceKit/lit.local.cfg
index 18b11a94133..a20cf768e24 100644
--- a/test/SourceKit/lit.local.cfg
+++ b/test/SourceKit/lit.local.cfg
@@ -1,5 +1,5 @@
 import os
-import pipes
+import shlex
 
 
 if 'sourcekit' not in config.available_features:
@@ -18,5 +18,5 @@ else:
     config.substitutions.append( ('%sourcekitd-test', '%s -module-cache-path %r' % (config.sourcekitd_test, config.clang_module_cache_path)) )
     config.substitutions.append( ('%complete-test', '%s -module-cache-path=%r' % (config.complete_test, config.clang_module_cache_path)) )
     config.substitutions.append( ('%swiftlib_dir', config.swiftlib_dir) )
-    config.substitutions.append( ('%sed_clean', '%s %s' % (pipes.quote(sys.executable), sk_path_sanitize) ) )
+    config.substitutions.append( ('%sed_clean', '%s %s' % (shlex.quote(sys.executable), sk_path_sanitize) ) )
 
diff --git a/test/lit.cfg b/test/lit.cfg
index 3535b1f7cd0..57b714a64d6 100644
--- a/test/lit.cfg
+++ b/test/lit.cfg
@@ -28,7 +28,6 @@ import subprocess
 import sys
 import socket
 import glob
-import pipes
 from distutils.sysconfig import get_python_lib
 
 import lit
@@ -130,11 +129,7 @@ def get_lldb_python_interpreter(lldb_build_root):
     return python_path
 
 if not platform.system() == 'Windows':
-    # Python 3.3 has shlex.quote, while previous Python have pipes.quote
-    if sys.version_info[0:2] >= (3, 2):
-        shell_quote = shlex.quote
-    else:
-        shell_quote = pipes.quote
+    shell_quote = shlex.quote
 else:
     # In Windows neither pipe.quote nor shlex.quote works.
     def shell_quote(s):
diff --git a/utils/build-script-impl b/utils/build-script-impl
index 074e6f6cad2..5ce2d2eb37a 100755
--- a/utils/build-script-impl
+++ b/utils/build-script-impl
@@ -330,7 +330,7 @@ function with_pushd() {
 }
 
 function quoted_print() {
-    python -c 'import pipes; import sys; print(" ".join(pipes.quote(arg) for arg in sys.argv[1:]))' "$@"
+    python -c 'import shlex; import sys; print(" ".join(shlex.quote(arg) for arg in sys.argv[1:]))' "$@"
 }
 
 function toupper() {
diff --git a/utils/build_swift/build_swift/shell.py b/utils/build_swift/build_swift/shell.py
index edcc35d7938..ae7712e2088 100644
--- a/utils/build_swift/build_swift/shell.py
+++ b/utils/build_swift/build_swift/shell.py
@@ -33,7 +33,7 @@ from six.moves import map
 
 try:
     # Python 2
-    from pipes import quote as _quote
+    from shlex import quote as _quote
 except ImportError:
     from shutil import quote as _quote
 
diff --git a/utils/coverage/coverage-generate-data b/utils/coverage/coverage-generate-data
index 947a26f107e..3cda4801b75 100755
--- a/utils/coverage/coverage-generate-data
+++ b/utils/coverage/coverage-generate-data
@@ -13,7 +13,7 @@ import argparse
 import logging
 import multiprocessing
 import os
-import pipes
+import shlex
 import platform
 import subprocess
 import sys
@@ -38,7 +38,7 @@ global_build_subdir = ''
 
 def quote_shell_cmd(cmd):
     """Return `cmd` as a properly quoted shell string"""
-    return ' '.join([pipes.quote(a) for a in cmd])
+    return ' '.join([shlex.quote(a) for a in cmd])
 
 
 def call(cmd, verbose=True, show_cmd=True):
diff --git a/utils/rth b/utils/rth
index 36852b9eba5..cb3fe0e7dca 100755
--- a/utils/rth
+++ b/utils/rth
@@ -14,7 +14,6 @@ from __future__ import print_function
 import argparse
 import glob
 import os
-import pipes
 import platform
 import shlex
 import shutil
@@ -29,7 +28,7 @@ def verbose_print_command(command):
         if platform.system() == 'Windows':
             print(subprocess.list2cmdline(command))
         else:
-            print(" ".join(pipes.quote(c) for c in command))
+            print(" ".join(shlex.quote(c) for c in command))
         sys.stdout.flush()
 
 
diff --git a/utils/sil-opt-verify-all-modules.py b/utils/sil-opt-verify-all-modules.py
index b3092ff60a1..fba422d973c 100755
--- a/utils/sil-opt-verify-all-modules.py
+++ b/utils/sil-opt-verify-all-modules.py
@@ -15,7 +15,7 @@ import argparse
 import glob
 import multiprocessing
 import os
-import pipes
+import shlex
 import subprocess
 import sys
 import tempfile
@@ -96,7 +96,7 @@ def get_verify_resource_dir_modules_commands(
 
 
 def quote_shell_command(args):
-    return " ".join([pipes.quote(a) for a in args])
+    return " ".join([shlex.quote(a) for a in args])
 
 
 def run_commands_in_parallel(commands):
diff --git a/utils/swift_build_support/swift_build_support/build_script_invocation.py b/utils/swift_build_support/swift_build_support/build_script_invocation.py
index 941ba842fad..bd794119186 100644
--- a/utils/swift_build_support/swift_build_support/build_script_invocation.py
+++ b/utils/swift_build_support/swift_build_support/build_script_invocation.py
@@ -11,7 +11,7 @@
 # ===---------------------------------------------------------------------===#
 
 import os
-import pipes
+import shlex
 import platform
 
 from build_swift.build_swift import argparse
@@ -126,9 +126,9 @@ class BuildScriptInvocation(object):
             "--cmake-generator", args.cmake_generator,
             "--build-jobs", str(args.build_jobs),
             "--common-cmake-options=%s" % ' '.join(
-                pipes.quote(opt) for opt in cmake.common_options()),
+                shlex.quote(opt) for opt in cmake.common_options()),
             "--build-args=%s" % ' '.join(
-                pipes.quote(arg) for arg in cmake.build_args()),
+                shlex.quote(arg) for arg in cmake.build_args()),
             "--dsymutil-jobs", str(args.dsymutil_jobs),
         ]
 
@@ -370,7 +370,7 @@ class BuildScriptInvocation(object):
         if args.extra_cmake_options:
             impl_args += [
                 "--extra-cmake-options=%s" % ' '.join(
-                    pipes.quote(opt) for opt in args.extra_cmake_options)
+                    shlex.quote(opt) for opt in args.extra_cmake_options)
             ]
 
         if args.lto_type is not None:
diff --git a/utils/swift_build_support/swift_build_support/shell.py b/utils/swift_build_support/swift_build_support/shell.py
index 32c39811aa0..78c17d06227 100644
--- a/utils/swift_build_support/swift_build_support/shell.py
+++ b/utils/swift_build_support/swift_build_support/shell.py
@@ -16,7 +16,7 @@ Centralized command line and file system interface for the build script.
 from __future__ import print_function
 
 import os
-import pipes
+import shlex
 import platform
 import shutil
 import subprocess
@@ -37,7 +37,7 @@ def _fatal_error(message):
 
 
 def _quote(arg):
-    return pipes.quote(str(arg))
+    return shlex.quote(str(arg))
 
 
 def quote_command(args):
